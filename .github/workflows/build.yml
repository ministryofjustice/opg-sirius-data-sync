name: Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

defaults:
 run:
  shell: bash

jobs:
  build:
    name: Build Image
    uses: ministryofjustice/opg-github-workflows/.github/workflows/build-multi-architecture-image.yml@ce7e03453712dee1e56accf0a83a4349b1a97c42 # v3.10.0
    with:
      image_name: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/data-sync
  
  push:
    name: Test & Publish Image
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      tag: ${{ steps.bump_version.outputs.tag }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Extract branch name
        run: |
          if [ "${{ github.head_ref }}" == "" ]; then
            echo BRANCH_NAME=main >> $GITHUB_ENV
          else
            echo BRANCH_NAME=$(echo ${{ github.head_ref }} | sed 's/\//-/g') >> $GITHUB_ENV
          fi
        id: extract_branch

      - name: Bump version
        id: bump_version
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297 # 1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.0
          DEFAULT_BUMP: minor
          PRERELEASE: true
          PRERELEASE_SUFFIX: ${{ env.BRANCH_NAME }}
          RELEASE_BRANCHES: main
          WITH_V: true

      - name: Set up Docker
        run: |
          echo '{"experimental": true, "features": { "containerd-snapshotter": true }}' | sudo tee -a /etc/docker/daemon.json
          sudo systemctl restart docker
          docker run --privileged --rm tonistiigi/binfmt --install all
      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          path: /tmp/images
          name: multi-arch-image
      - name: Load Image
        run: |
          docker load -i /tmp/images/multi-arch-image.tar

      - name: Trivy Image Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/data-sync:latest
          severity: 'MEDIUM,HIGH,CRITICAL'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@1b549b9259bda1cb5ddde3b41741a82a2d15a841 # v3.28.13
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Install Inspec for Image Tests
        run: |
          curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec -v 5
          inspec --chef-license=accept

      - name: Run Inspec Tests
        env:
          CHEF_LICENSE: accept
        run: |
          make test
          make cleanup

      - name: Test Database Tuning Script
        run: make test-database-tuning
        
      - name: Test User Role Setup
        run: make test-role-setup

      - name: Publish Inspec Test Results
        uses: EnricoMi/publish-unit-test-result-action@afb2984f4d89672b2f9d9c13ae23d53779671984 # v2.19.0
        if: always()
        with:
          check_name: "Inspec Test Results"
          files: data-sync-inspec.xml

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/sirius-actions-ci
          role-duration-seconds: 3600
          role-session-name: GitHubActions

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: 311462405659

      - name: Push & Tag
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DATA_SYNC_ECR_REPOSITORY: sirius/data-sync
        run: |
          docker tag $ECR_REGISTRY/$DATA_SYNC_ECR_REPOSITORY:latest $ECR_REGISTRY/$DATA_SYNC_ECR_REPOSITORY:${{ steps.bump_version.outputs.tag }}
          if [ $BRANCH_NAME == "main" ]; then
            docker tag $ECR_REGISTRY/$DATA_SYNC_ECR_REPOSITORY:latest $ECR_REGISTRY/$DATA_SYNC_ECR_REPOSITORY:main-${{ steps.bump_version.outputs.tag }}
            docker tag $ECR_REGISTRY/$DATA_SYNC_ECR_REPOSITORY:latest $ECR_REGISTRY/$DATA_SYNC_ECR_REPOSITORY:main-${{ steps.bump_version.outputs.tag }}-$(date +"%Y%m%d%H%M%S")
            # We want all of the tags pushed
            docker push --all-tags $ECR_REGISTRY/$DATA_SYNC_ECR_REPOSITORY
          else
            docker push $ECR_REGISTRY/$DATA_SYNC_ECR_REPOSITORY:${{ steps.bump_version.outputs.tag }}
          fi

  push-version:
    name: Push Version to Parameter Store & Trigger Deploy
    runs-on: ubuntu-latest
    needs: [build, push]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::997462338508:role/sirius-actions-ci
          role-duration-seconds: 3600
          role-session-name: GitHubActions

      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@e8b481e524a99f37fbd39fdc1dcb3341ab091367 # v1.0.7

      - name: Push Tag to Parameter Store
        run: |
          aws ssm put-parameter --name "opg-sirius-data-sync-latest-green-build" --type "String" --value "${{ needs.push.outputs.tag}}" --overwrite --region=eu-west-1

      - name: Trigger Dev Deploy
        shell: bash
        run: curl -u ${{ secrets.JENKINS_API_USER }}:${{ secrets.JENKINS_API_TOKEN }} "https://${{ secrets.JENKINS_URL }}/job/Sirius/job/Deploy_to_Development/build?token=${{ secrets.JENKINS_API_TOKEN_NAME }}&cause=Triggered+by+opg-sirius-data-sync"
